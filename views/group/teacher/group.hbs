<div class="panel panel-default">
  <div class="panel-body">
        {{group.groupName}}. {{group.time}} Преподаватель: <a href="/user/{{teacher._id}}"  class="teacherLink" id="{{teacher._id}}">{{teacher.firstName}} {{teacher.lastName}}</a>
  </div>
</div>



{{#if studentsIn}}
<div class="panel panel-default">
  <div class="panel-body">
    <p>Участники группы</p>
    <ul class="list-group">
      {{#each studentsIn}}
          <li class="list-group-item">
            <a href = "/user/{{this._id}}">{{this.firstName}} {{this.lastName}}</a>
              Баланс:  {{this.balance}}
            <!--  <label class="btn btn-primary pull-right"> -->
                <input type="checkbox" autocomplete="off" id="{{this._id}}" class="pull-right">
                <button class="btn btn-danger pull-right kickoutButton" id="{{this._id}}">Исключить из группы</button>
            <!--  </label> -->
          </li>
      {{/each}}
    </ul>
  </div>
</div>

<div class="panel panel-default">
  <div class="panel-body">
    <button class="btn btn-primary" onclick="charge()">Charge</button>
    <input type="text" class="form-control" id="chargeValue">
  </div>
</div>
{{/if}}

{{#if studentsAsk}}
<div class="panel panel-default">
  <div class="panel-body">
    <p>Хотят вступить в группу</p>
    <ul class="list-group">
      {{#each studentsAsk}}
          <li class="list-group-item">
            <a href = "/user/{{this._id}}">{{this.firstName}} {{this.lastName}}</a>
              Баланс:  {{this.balance}}
            <button class="btn btn-warning pull-right rejectButton" id="{{this._id}}">Отклонить заявку</button>
            <button class="btn btn-success pull-right approveButton" id="{{this._id}}">Принять в группу</button>
          </li>
      {{/each}}
    </ul>
  </div>
</div>
{{/if}}

{{#if studentsInv}}
<div class="panel panel-default">
  <div class="panel-body">
    <p>Приглашенные в группу</p>
    <ul class="list-group">
      {{#each studentsInv}}
          <li class="list-group-item">
            <a href = "/user/{{this._id}}">{{this.firstName}} {{this.lastName}}</a>
              Баланс:  {{this.balance}}
            <button class="btn btn-warning pull-right cancelButton" id="{{this._id}}">Отменить приглашение</button>
          </li>
      {{/each}}
    </ul>
  </div>
</div>
{{/if}}

<!--<form onsubmit="charge()">-->
<!--</form>-->
<div class="panel panel-default">
  <div class="panel-body">
    <a class="btn btn-default" href="/user-index?manage={{group._id}}">Пригласить студентов</a>
    <a class="btn btn-default" href="/group/{{group._id}}?edit=true">Редактировать группу</a>
    <button class="btn btn-danger deleteButton" id="{{group._id}}" onclick="deleteGroup()">Удалить группу</button>
  </div>
</div>
<script>

  $('.kickoutButton').on('click', function(){
    var userToKickout = $(this).attr("id");
    var groupToManage = $('.deleteButton').attr("id");
    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/group-manage', true);
    xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    xhr.send(JSON.stringify({userToKickout: userToKickout, groupToManage: groupToManage}));
    console.log(JSON.stringify({userToKickout: userToKickout, groupToManage: groupToManage}));
    xhr.onload = function () {
      if(xhr.status === 200) {
        var responseText = xhr.responseText;
        console.log(responseText);
        location.reload();
      }
      else {
        console.log(responseText);
      }
    };
  });

  $('.rejectButton').on('click', function(){
    var userToReject = $(this).attr("id");
    var groupToManage = $('.deleteButton').attr("id");
    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/group-manage', true);
    xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    xhr.send(JSON.stringify({userToReject: userToReject, groupToManage: groupToManage}));
    console.log(JSON.stringify({userToReject: userToReject, groupToManage: groupToManage}));
    xhr.onload = function () {
      if(xhr.status === 200) {
        var responseText = xhr.responseText;
        console.log(responseText);
        location.reload();
      }
      else {
        console.log(responseText);
      }
    };
  });

  $('.approveButton').on('click', function (){
    var userToApprove = $(this).attr("id");
    var groupToManage = $('.deleteButton').attr("id");
    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/group-manage', true);
    xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    xhr.send(JSON.stringify({userToApprove: userToApprove, groupToManage: groupToManage}));
    console.log(JSON.stringify({userToApprove: userToApprove, groupToManage: groupToManage}));
    xhr.onload = function () {
      if(xhr.status === 200) {
        var responseText = xhr.responseText;
        console.log(responseText);
        location.reload();
      }
      else {
        console.log(responseText);
      }
    };
  });

  $('.cancelButton').on('click', function (){
    var userToCancel = $(this).attr("id");
    var groupToManage = $('.deleteButton').attr("id");
    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/group-manage', true);
    xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    xhr.send(JSON.stringify({userToCancel: userToCancel, groupToManage: groupToManage}));
    console.log(JSON.stringify({userToCancel: userToCancel, groupToManage: groupToManage}));
    xhr.onload = function () {
      if(xhr.status === 200) {
        var responseText = xhr.responseText;
        console.log(responseText);
        location.reload();
      }
      else {
        console.log(responseText);
      }
    };
  });


  function deleteGroup () {

    var groupToDelete = $('.deleteButton').attr("id");
    console.log(groupToDelete);
    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/group-delete', true);
    xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    xhr.send(JSON.stringify({groupToDelete: groupToDelete}));
    console.log(JSON.stringify({groupToDelete: groupToDelete}));
    xhr.onload = function () {
      if(xhr.status === 200) {
        var responseText = xhr.responseText;
        location.reload();
        alert(responseText);
      }
      else {
        alert(responseText);
      }
    }

  };




  function charge () {

    var chargeValue = $('#chargeValue').val();


    var usersToCharge = [];
    $("input[type='checkbox']").each(function(){
      if($(this).is(":checked")) {
        usersToCharge.push($(this).attr("id"))
      }
    });

    var teacherToAccept = $('.teacherLink').attr("id");
    console.log(teacherToAccept);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/group-charge', true);
    xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    console.log(chargeValue);
    xhr.send(JSON.stringify({usersToCharge: usersToCharge, chargeValue: chargeValue, teacherToAccept: teacherToAccept}));
    console.log(JSON.stringify({usersToCharge: usersToCharge, chargeValue: chargeValue, teacherToAccept: teacherToAccept}));

    xhr.onload = function () {
      if(xhr.status === 200) {
        var responseText = xhr.responseText;
        console.log(responseText);
        location.reload();
      }
      else {
        console.log(responseText);
      }
    };


  }
</script>
